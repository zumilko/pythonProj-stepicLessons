#  Copyright (c) 2021.  Primus-E
"""
После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное
расстояние в сантиметрах, которое должна пройти черепашка.
Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу,
которая определит, куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу,
которая выведет точку, в которой окажется черепашка после всех команд. Для простоты они решили считать,
что движение начинается в точке (0, 0), и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n, которые нужно выполнить черепашке, после чего n строк
с самими командами. Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки.
Все координаты целочисленные.
Sample Input:
4
север 10
запад 20
юг 30
восток 40

Sample Output:
20 -20
"""

def walk(side: str, l: str) -> int:
    c0, c1 = 0, 0
    if side == 'север': c1 += int(l)
    elif side == 'юг': c1 -= int(l)
    elif side == 'восток': c0 += int(l)
    elif side == 'запад': c0 -= int(l)
    return c0, c1


comand_lst: list[list[str]] = [input().split() for _ in range(int(input()))]
print(comand_lst)
end_coordinate_0 = 0
end_coordinate_1 = 0
for i, n in enumerate(comand_lst):
    end_coordinate_0 += (walk(n[0], n[1]))[0]
    end_coordinate_1 += (walk(n[0], n[1]))[1]


print(end_coordinate_0, end_coordinate_1 )
